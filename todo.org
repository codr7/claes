3268
1208

mistral 8x7b
https://medium.com/vendi-ai/efficiently-run-your-fine-tuned-llm-locally-using-llama-cpp-66e2a7c51300
https://huggingface.co/mistralai/Mistral-7B-v0.1

* js
** add f64 parser
*** parse two i64
** add map parser

* extract answer in llama.claes

* --

* add support for pair calls
*** drop _

* return pair from parse-js
** value:end_pos

* add vm.arity vector
** write failing test with nested splats
** add PUSH_ARITY op
*** push initial arity
** pop in call ops
** skip zeroing in call ops

* add support for f64 > 1 in reader

* ifdef curl lib
** CMake
** libs/Curl

* rename Curl library to IO
** move say, dump

* add defcon
** command line arg
** vm.defcon
** disable more the lower it is
** disallow anything that changes the machine
*** no define, ^, stop, dump, say, curl, set
*** skip definition in library constructor

* add composition using pipe character
** check jalang/dot

* add import macro
** register core/curl in root env
*** add VM.root_env
** remove default curl import
** use in llama.claes

* define <= and >= in core eval block
** use vararg/splat
** add tests

* add len method
** add Cell.len()
** return 1 default
** override for i64, string, vector, pair (2)

* add Type.peek/pop
** self default
*** set nil on pop
** first för pair
** peek/pop för vector/string
** pop for i64
** add stacks to readme

* implement Pair::iter

* replace Rec with move/erase

* add filter macro
* add reduce macro
* add map macro

* aoc1

* use vm alloc for Ref imps
* use vm alloc for Env imps

* add incr macro
** add increment op

* rebind updated parent Expr envs in Env constructor
** replaces default create of new env in Expr

* add slurp-lines
** return iteratpr

* fix recursion/bindings

(^ fib [n]
  (let [table {}]
    (^ helper [nn]
      (or (table nn)
          (let [result (if (< n 2) n (+ (helper (- nn 1))
                                        (helper (- nn 2))))]
           (table nn result)
           (table nn))))
    (helper n))))

(fib 10)
