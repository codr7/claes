#!claes
(trace)

(define server "http://localhost:8080/completion")

(^ send-prompt [value]
  (let [data '{
         stream:            ,F
         n_predict:         400
         temperature:       0
         stop:              ["</s>"]
         repeat_last_n:     256
         repeat_penalty:    1
         top_k:             20
         top_p:             .75
         tfs_z:             1
         typical_p:         1
         presence_penalty:  0
         frequency_penalty: 0
         mirostat:          0
         mirostat_tau:      5
         mirostat_eta:      .1
         grammar:           ""
         n_probs:           0
         prompt:            ,value
       }]
    (parse-js (curl server "application/json" (js data)))))

(^ repl [history]
  (let [p (ask ":) ")]
    (say "in a jiffy...")
    (say history)
    (push history p)
    (say ((send-prompt (join "\n" history)) "content"))
    (say)
    (say history)
    (repl history)))

(if ARGV
  (say (send-prompt (join " " ARGV)))
  (repl []))

